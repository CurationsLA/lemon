name: "CurationsLA Content to Ghost Draft"

on:
  push:
    branches: [ main ]
  schedule:
    - cron: '0 13 * * *'
  workflow_dispatch:

jobs:
  deploy-and-source:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        
    - name: Verify Node.js version
      run: |
        node --version
        npm --version
        which node
        
    - name: Install dependencies
      run: npm install
      
    - name: Deploy Cloudflare Worker
      env:
        CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
      run: |
        echo "Node version: $(node --version)"
        if [ -z "$CLOUDFLARE_API_TOKEN" ]; then
          echo "❌ CLOUDFLARE_API_TOKEN is not set"
          exit 1
        fi
        echo "✅ CLOUDFLARE_API_TOKEN is available"
        npx wrangler deploy --env="" --compatibility-date=2024-01-01
        echo "✅ Checking deployed routes..."
        npx wrangler route list
        
    - name: Set Cloudflare Worker secrets
      env:
        CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
        GHOST_ADMIN_API_KEY: ${{ secrets.GHOST_ADMIN_API_KEY }}
      run: |
        if [ -z "$CLOUDFLARE_API_TOKEN" ] || [ -z "$GHOST_ADMIN_API_KEY" ]; then
          echo "❌ Required secrets are missing:"
          echo "CLOUDFLARE_API_TOKEN: $([[ -n "$CLOUDFLARE_API_TOKEN" ]] && echo "✅ Set" || echo "❌ Missing")"
          echo "GHOST_ADMIN_API_KEY: $([[ -n "$GHOST_ADMIN_API_KEY" ]] && echo "✅ Set" || echo "❌ Missing")"
          exit 1
        fi
        echo "✅ Setting Ghost Admin API key in Cloudflare Worker"
        echo "$GHOST_ADMIN_API_KEY" | npx wrangler secret put GHOST_ADMIN_API_KEY
        
    - name: Test health endpoint
      run: |
        echo "Testing health endpoint..."
        curl -v "https://la.curations.cc/health" || echo "Health check failed"
        
    - name: Trigger content sourcing
      run: |
        sleep 30  # Allow deployment to propagate
        echo "Triggering content sourcing..."
        curl -v -X POST "https://la.curations.cc/api/source-content" \
          -H "Content-Type: application/json" \
          -H "User-Agent: CurationsLA-GitHub-Action/1.0" \
          -d '{"trigger": "github-action"}' || echo "Content sourcing failed"
          
    - name: Create Ghost draft from sourced content
      run: |
        sleep 10  # Allow content processing
        echo "Creating Ghost draft..."
        TITLE="CurationsLA Good Vibes - $(date +'%B %d, %Y')"
        DATE="$(date +'%Y-%m-%d')"
        curl -v -X POST "https://la.curations.cc/api/create-draft" \
          -H "Content-Type: application/json" \
          -H "User-Agent: CurationsLA-GitHub-Action/1.0" \
          -d "{\"title\": \"$TITLE\", \"publicationDate\": \"$DATE\"}" || echo "Draft creation failed"